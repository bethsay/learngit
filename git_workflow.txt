Git workflow.
Zone1 : local Working directory : Here you write your stuff. You can create and edit files.
Zone2 : local Staging : Here you ADD your stuff. You tell git to start tracking all or some stuff from Zone1.
Zone3 : local Repo : Here you COMMIT your stuff. You tell git to save everything from Zone2. Here git can tell if there are conflicts or other problems
Zone4 : Common Repo : Here you PUSH your stuff. You tell git to send everything from Zone3 to a repo used by your teammates and accessed with a URL.

Zone1 : Enter Zone1
    #pwd                || If you are not in local_gitproject. Do cd local_gitproject
    #vim file1.txt      
    #vim file2.txt      
Zone2 : Create Zone2. Adding only file1 to Zone2
    #git status
    #git add file1.txt
    #git status
Zone2 : Other possible actions you can perform in Zone2
Zone2 : 1.Send file1.txt back to Zone1. both does the same thing
    #git rm --cached file1.txt
    #git restore --staged file1.txt
Zone2 : 2.Edit file1.txt. Update file1.txt changes in Zone2
    #vim file1.txt          || Zone1 activity
    #git add file1.txt
Zone2 : 3.Edit file1.txt again and forget what and why you edited. You dont want any unknown changes.
    #vim file1.txt          || Zone1 activity
    #git restore file1.txt
Zone2 : Add every/all changes to local staging ie Zone2
    #git add .
Zone3 : Commit all of Zone2 into an existing Zone3
    #git commit -m "Add file1.txt and ignore file2.txt"
    #git log --oneline      || ignore --oneline for more details
Zone4 : 
    #git remote -v
    #git remote add repo2_sameproject https://github.com/user/repo
    #git fetch
    #git push
    #git pull
    #git merge
